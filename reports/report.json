[
  {
    "description": "",
    "elements": [
      {
        "description": "",
        "id": "categories-crud;the-endpoint-should-be-able-to-get-the-collection-of-all-categories",
        "keyword": "Scenario",
        "line": 5,
        "name": "The endpoint should be able to get the collection of all categories",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 6,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 2000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 7,
            "name": "I execute a GET request to wp/v2/categories endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 78000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 8,
            "name": "The status code should be 200 OK",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 3000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Categories",
            "line": 1
          },
          {
            "name": "@Categories-CRUD",
            "line": 4
          },
          {
            "name": "@Category-List",
            "line": 4
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "categories-crud;the-endpoint-should-be-able-to-create-a-new-category",
        "keyword": "Scenario",
        "line": 11,
        "name": "The endpoint should be able to create a new category",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 12,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "Valid.POST.CreateCategory"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 13,
            "name": "I have the required payload",
            "match": {
              "location": "features\\support\\steps\\steps.js:22"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 15,
            "name": "I execute a GET request to wp/v2/categories endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 56000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 16,
            "name": "The status code should be 200 OK",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Categories",
            "line": 1
          },
          {
            "name": "@Categories-CRUD",
            "line": 10
          },
          {
            "name": "@Category-Create",
            "line": 10
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "categories-crud;a-category-should-be-able-to-retrieve-by-id",
        "keyword": "Scenario",
        "line": 19,
        "name": "A category should be able to retrieve by id",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "failed",
              "duration": 58000000,
              "error_message": "Error: Request failed with status code 400\n    at createError (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\node_modules\\axios\\lib\\core\\createError.js:16:15)\n    at settle (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\node_modules\\axios\\lib\\core\\settle.js:17:12)\n    at IncomingMessage.handleStreamEnd (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\node_modules\\axios\\lib\\adapters\\http.js:293:11)\n    at IncomingMessage.emit (node:events:406:35)\n    at endReadableNT (node:internal/streams/readable:1329:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 20,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "Valid.GET.RetrieveACategory"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 21,
            "name": "I have the required payload",
            "match": {
              "location": "features\\support\\steps\\steps.js:22"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 23,
            "name": "I execute a GET request to wp/v2/categories/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 24,
            "name": "The status code should be 200 OK",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Categories",
            "line": 1
          },
          {
            "name": "@Categories-CRUD",
            "line": 18
          },
          {
            "name": "@Category-Retrieve",
            "line": 18
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "categories-crud;the-endpoint-should-be-able-to-update-the-category",
        "keyword": "Scenario",
        "line": 27,
        "name": "The endpoint should be able to update the category",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "failed",
              "duration": 56000000,
              "error_message": "Error: Request failed with status code 400\n    at createError (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\node_modules\\axios\\lib\\core\\createError.js:16:15)\n    at settle (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\node_modules\\axios\\lib\\core\\settle.js:17:12)\n    at IncomingMessage.handleStreamEnd (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\node_modules\\axios\\lib\\adapters\\http.js:293:11)\n    at IncomingMessage.emit (node:events:406:35)\n    at endReadableNT (node:internal/streams/readable:1329:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 28,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "Valid.POST.UpdateCategory"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 29,
            "name": "I have the required payload",
            "match": {
              "location": "features\\support\\steps\\steps.js:22"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 31,
            "name": "I execute a POST request to wp/v2/categories/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 32,
            "name": "The category is updated",
            "match": {
              "location": "features\\support\\steps\\steps.js:67"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 33,
            "name": "The status code should be 200 OK",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Categories",
            "line": 1
          },
          {
            "name": "@Categories-CRUD",
            "line": 26
          },
          {
            "name": "@Category-Update",
            "line": 26
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "categories-crud;the-endpoint-should-be-able-to-delete-the-category-select-by-id",
        "keyword": "Scenario",
        "line": 36,
        "name": "The endpoint should be able TO DELETE the category select by ID",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "failed",
              "duration": 52000000,
              "error_message": "Error: Request failed with status code 400\n    at createError (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\node_modules\\axios\\lib\\core\\createError.js:16:15)\n    at settle (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\node_modules\\axios\\lib\\core\\settle.js:17:12)\n    at IncomingMessage.handleStreamEnd (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\node_modules\\axios\\lib\\adapters\\http.js:293:11)\n    at IncomingMessage.emit (node:events:406:35)\n    at endReadableNT (node:internal/streams/readable:1329:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 37,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "Valid.DELETE.DeleteCategory"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 38,
            "name": "I have the required payload",
            "match": {
              "location": "features\\support\\steps\\steps.js:22"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 40,
            "name": "I execute a DELETE request to wp/v2/categories/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 41,
            "name": "The category is deleted",
            "match": {
              "location": "features\\support\\steps\\steps.js:67"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 42,
            "name": "The status code should be 200 OK",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@Categories",
            "line": 1
          },
          {
            "name": "@Categories-CRUD",
            "line": 35
          },
          {
            "name": "@Category-Delete",
            "line": 35
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "categories-crud",
    "line": 2,
    "keyword": "Feature",
    "name": "Categories CRUD",
    "tags": [
      {
        "name": "@Categories",
        "line": 1
      }
    ],
    "uri": "features\\categories.feature"
  },
  {
    "description": "",
    "elements": [
      {
        "description": "",
        "id": "categories-negative-testing;the-endpoint-should-verify-that-a-non-authorized-user-cannot-be-able-to-get-the-collection-of-all-categories.",
        "keyword": "Scenario",
        "line": 5,
        "name": "The endpoint should Verify that a non authorized user cannot be able to get the collection of all categories.",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "failed",
              "duration": 44000000,
              "error_message": "Error: Request failed with status code 400\n    at createError (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\node_modules\\axios\\lib\\core\\createError.js:16:15)\n    at settle (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\node_modules\\axios\\lib\\core\\settle.js:17:12)\n    at IncomingMessage.handleStreamEnd (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\node_modules\\axios\\lib\\adapters\\http.js:293:11)\n    at IncomingMessage.emit (node:events:406:35)\n    at endReadableNT (node:internal/streams/readable:1329:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 6,
            "name": "I don't have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 7,
            "name": "I have a invalid payload: Invalid.GET.RetrieveACategory",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 8,
            "name": "I execute a GET request to wp/v2/categories endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 9,
            "name": "The error status code should be 400 Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Categories",
            "line": 1
          },
          {
            "name": "@Categories-Negative",
            "line": 4
          },
          {
            "name": "@Negative-Category-Retrieve",
            "line": 4
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "categories-negative-testing;the-endpoint-should-verify-that-a-non-authorized-user-cannot-be-able-to-update-or-create-a-category.",
        "keyword": "Scenario",
        "line": 15,
        "name": "The endpoint should Verify that a non authorized user cannot be able to update or create a category.",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 16,
            "name": "I don't have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 17,
            "name": "I have a invalid payload: Invalid.POST.UpdateCategory",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 18,
            "name": "I execute a POST request to wp/v2/categories endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 35000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 19,
            "name": "The error status code should be 400 Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "failed",
              "duration": 3000000,
              "error_message": "AssertionError\n    + expected - actual\n\n    -401\n    +400\n\n    at World.<anonymous> (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\features\\support\\steps\\/steps.js:54:43)"
            }
          }
        ],
        "tags": [
          {
            "name": "@Categories",
            "line": 1
          },
          {
            "name": "@Categories-Negative",
            "line": 14
          },
          {
            "name": "@Negative-Category-POST",
            "line": 14
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "categories-negative-testing;the-endpoint-should-verify-that-a-non-authorized-user-cannot-be-able-to-update-or-create-a-category.",
        "keyword": "Scenario",
        "line": 15,
        "name": "The endpoint should Verify that a non authorized user cannot be able to update or create a category.",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 16,
            "name": "I don't have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 17,
            "name": "I have a invalid payload: Invalid.POST.CreateCategory",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 18,
            "name": "I execute a POST request to wp/v2/categories endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 35000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 19,
            "name": "The error status code should be 400 Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Categories",
            "line": 1
          },
          {
            "name": "@Categories-Negative",
            "line": 14
          },
          {
            "name": "@Negative-Category-POST",
            "line": 14
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "categories-negative-testing;the-endpoint-should-verify-that-a-non-authorized-user-cannot-be-able-to-delete-a-category.",
        "keyword": "Scenario",
        "line": 26,
        "name": "The endpoint should Verify that a non authorized user cannot be able to delete a category.",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "failed",
              "duration": 56000000,
              "error_message": "Error: Request failed with status code 400\n    at createError (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\node_modules\\axios\\lib\\core\\createError.js:16:15)\n    at settle (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\node_modules\\axios\\lib\\core\\settle.js:17:12)\n    at IncomingMessage.handleStreamEnd (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\node_modules\\axios\\lib\\adapters\\http.js:293:11)\n    at IncomingMessage.emit (node:events:406:35)\n    at endReadableNT (node:internal/streams/readable:1329:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 27,
            "name": "I don't have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 28,
            "name": "I have a invalid payload: Invalid.DELETE.DeleteCategory",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 29,
            "name": "I execute a DELETE request to wp/v2/categories/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 30,
            "name": "The error status code should be 404 Not Found",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@Categories",
            "line": 1
          },
          {
            "name": "@Categories-Negative",
            "line": 25
          },
          {
            "name": "@Negative-Category-Delete",
            "line": 25
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "categories-negative-testing;the-endpoint-should-verify-that-a-non-id-concret-cannot-be-able-to-get-the-collection-data-of-specific-category.",
        "keyword": "Scenario",
        "line": 36,
        "name": "The endpoint should Verify that a non id concret cannot be able to get the collection data of specific category.",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "failed",
              "duration": 43000000,
              "error_message": "Error: Request failed with status code 400\n    at createError (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\node_modules\\axios\\lib\\core\\createError.js:16:15)\n    at settle (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\node_modules\\axios\\lib\\core\\settle.js:17:12)\n    at IncomingMessage.handleStreamEnd (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\node_modules\\axios\\lib\\adapters\\http.js:293:11)\n    at IncomingMessage.emit (node:events:406:35)\n    at endReadableNT (node:internal/streams/readable:1329:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 37,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 38,
            "name": "I have a invalid payload: Invalid.GET.RetrieveACategory",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 39,
            "name": "I execute a GET request to wp/v2/categories/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 40,
            "name": "The error status code should be 404 Not Found",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@Categories",
            "line": 1
          },
          {
            "name": "@Categories-Negative",
            "line": 35
          },
          {
            "name": "@Negative-Category-Retrieve",
            "line": 35
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "categories-negative-testing;the-endpoint-should-verify-that-a-non-name-cannot-be-able-to-create-a-category.",
        "keyword": "Scenario",
        "line": 46,
        "name": "The endpoint should Verify that a non name cannot be able to create a category.",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 47,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 48,
            "name": "I have a invalid payload: Invalid.POST.CreateCategory",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 49,
            "name": "I execute a POST request to wp/v2/categories/ endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 48000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 50,
            "name": "The error status code should be 400 Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Categories",
            "line": 1
          },
          {
            "name": "@Categories-Negative",
            "line": 45
          },
          {
            "name": "@Negative-Category-POST",
            "line": 45
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "categories-negative-testing;the-endpoint-should-verify-that-a-non-id-cannot-be-able-to-update-a-category.",
        "keyword": "Scenario",
        "line": 56,
        "name": "The endpoint should Verify that a non id cannot be able to update a category.",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 57,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 58,
            "name": "I have a invalid payload: Invalid.POST.UpdateCategory",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 59,
            "name": "I execute a POST request to wp/v2/categories/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 38000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 60,
            "name": "The error status code should be 404 Not Found",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Categories",
            "line": 1
          },
          {
            "name": "@Categories-Negative",
            "line": 55
          },
          {
            "name": "@Negative-Category-POST",
            "line": 55
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "categories-negative-testing;the-endpoint-should-verify-that-a-non-id-and-force-cannot-be-able-to-delete-a-category.",
        "keyword": "Scenario",
        "line": 66,
        "name": "The endpoint should Verify that a non id and force cannot be able to delete a category.",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "failed",
              "duration": 57000000,
              "error_message": "Error: Request failed with status code 400\n    at createError (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\node_modules\\axios\\lib\\core\\createError.js:16:15)\n    at settle (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\node_modules\\axios\\lib\\core\\settle.js:17:12)\n    at IncomingMessage.handleStreamEnd (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\node_modules\\axios\\lib\\adapters\\http.js:293:11)\n    at IncomingMessage.emit (node:events:406:35)\n    at endReadableNT (node:internal/streams/readable:1329:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)"
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 67,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "Valid.DELETE.DeleteCategoryy"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 68,
            "name": "I have the required payload",
            "match": {
              "location": "features\\support\\steps\\steps.js:22"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 70,
            "name": "I execute a DELETE request to wp/v2/categories/{id}?force=true endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 71,
            "name": "The error status code should be 404 Not Found",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@Categories",
            "line": 1
          },
          {
            "name": "@Categories-Negative",
            "line": 65
          },
          {
            "name": "@Negative-Category-Delete",
            "line": 65
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "categories-negative-testing",
    "line": 2,
    "keyword": "Feature",
    "name": "Categories Negative Testing",
    "tags": [
      {
        "name": "@Categories",
        "line": 1
      }
    ],
    "uri": "features\\categories.negative.feature"
  },
  {
    "description": "",
    "elements": [
      {
        "description": "",
        "id": "pages-crud;a-user-should-be-able-to-retrieve-the-collection-of-all-pages",
        "keyword": "Scenario",
        "line": 5,
        "name": "A user should be able to retrieve the collection of all pages",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 6,
            "name": "Given valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 5000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 7,
            "name": "Executing GET request to wp/v2/pages page endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 53000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 8,
            "name": "the status code should be 200 OK",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:59"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Pages",
            "line": 1
          },
          {
            "name": "@PAGE-CRUD",
            "line": 4
          },
          {
            "name": "@PAGE-GET",
            "line": 4
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "pages-crud;a-user-should-be-able-to-retrieve-the-collection-of-an-specific-page",
        "keyword": "Scenario",
        "line": 11,
        "name": "A user should be able to retrieve the collection of an specific page",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 67000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 12,
            "name": "Given valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 13,
            "name": "Executing GET request to wp/v2/pages/{id} page endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 41000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 14,
            "name": "the status code should be 200 OK",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:59"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 345000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Pages",
            "line": 1
          },
          {
            "name": "@PAGE-CRUD",
            "line": 10
          },
          {
            "name": "@PAGE-SPECIFICGET",
            "line": 10
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "pages-crud;a-user-should-be-able-to-create-a-new-page",
        "keyword": "Scenario",
        "line": 17,
        "name": "A user should be able to create a new page",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 18,
            "name": "Given valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "Valid.POST"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 19,
            "name": "Given the required payload",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:18"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 21,
            "name": "Executing POST request to wp/v2/pages page endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 119000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 22,
            "name": "the status code should be 201 Created",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:59"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 127000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Pages",
            "line": 1
          },
          {
            "name": "@PAGE-CRUD",
            "line": 16
          },
          {
            "name": "@PAGE-POST",
            "line": 16
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "pages-crud;a-user-should-be-able-to-update-a-page",
        "keyword": "Scenario",
        "line": 25,
        "name": "A user should be able to update a page",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 72000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 26,
            "name": "Given valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "Valid.PUT"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 27,
            "name": "Given the required payload",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:18"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 29,
            "name": "Executing POST request to wp/v2/pages/{id} page endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 76000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 30,
            "name": "The page has been updated",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:67"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 31,
            "name": "the status code should be 200 OK",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:59"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 299000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Pages",
            "line": 1
          },
          {
            "name": "@PAGE-CRUD",
            "line": 24
          },
          {
            "name": "@PAGE-PUT",
            "line": 24
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "pages-crud;a-user-should-be-able-to-delete-a-page",
        "keyword": "Scenario",
        "line": 34,
        "name": "A user should be able to delete a page",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 68000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 35,
            "name": "Given valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 36,
            "name": "Executing DELETE request to wp/v2/pages/{id} page endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 307000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 37,
            "name": "The page has been deleted",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:67"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 38,
            "name": "the status code should be 200 OK",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:59"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Pages",
            "line": 1
          },
          {
            "name": "@PAGE-CRUD",
            "line": 33
          },
          {
            "name": "@PAGE-DELETE",
            "line": 33
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "pages-crud",
    "line": 2,
    "keyword": "Feature",
    "name": "Pages CRUD",
    "tags": [
      {
        "name": "@Pages",
        "line": 1
      }
    ],
    "uri": "features\\pages.feature"
  },
  {
    "description": "",
    "elements": [
      {
        "description": "",
        "id": "pages-negative-testing;verify-that-a-non-authorized-user-cannot-create-a-page",
        "keyword": "Scenario",
        "line": 5,
        "name": "Verify that a non authorized user cannot create a page",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 6,
            "name": "Does not using valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:22"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "Valid.POST"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 7,
            "name": "Given the required payload",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:18"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 9,
            "name": "Executing POST request to wp/v2/pages page endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 42000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 10,
            "name": "the status code should be 401 Unauthorized",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:59"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Pages",
            "line": 1
          },
          {
            "name": "@NEGATIVE",
            "line": 4
          },
          {
            "name": "@UNAUTHORIZED-POST",
            "line": 4
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "pages-negative-testing;verify-that-a-non-authorized-user-cannot-update-a-page",
        "keyword": "Scenario",
        "line": 13,
        "name": "Verify that a non authorized user cannot update a page",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 62000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 14,
            "name": "Does not using valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:22"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "Valid.POST"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 15,
            "name": "Given the required payload",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:18"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 17,
            "name": "Executing POST request to wp/v2/pages page endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 40000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 18,
            "name": "the status code should be 401 Unauthorized",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:59"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 297000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Pages",
            "line": 1
          },
          {
            "name": "@NEGATIVE",
            "line": 12
          },
          {
            "name": "@UNAUTHORIZED-PUT",
            "line": 12
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "pages-negative-testing;verify-that-a-non-authorized-user-cannot-update-a-page",
        "keyword": "Scenario",
        "line": 21,
        "name": "Verify that a non authorized user cannot update a page",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 62000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 22,
            "name": "Does not using valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:22"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 23,
            "name": "Executing DELETE request to wp/v2/pages/{id} page endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 40000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 24,
            "name": "The page has been deleted",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:67"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 25,
            "name": "the status code should be 401 Unauthorized",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:59"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 346000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Pages",
            "line": 1
          },
          {
            "name": "@NEGATIVE",
            "line": 20
          },
          {
            "name": "@UNAUTHORIZED-DELETE",
            "line": 20
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "pages-negative-testing;a-user-should-be-able-to-retrieve-the-collection-of-all-pages",
        "keyword": "Scenario",
        "line": 28,
        "name": "A user should be able to retrieve the collection of all pages",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 29,
            "name": "Does not using valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:22"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 30,
            "name": "Executing GET request to wp/v2/pages page endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 49000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 31,
            "name": "the status code should be 401 Unauthorized",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:59"
            },
            "result": {
              "status": "failed",
              "duration": 1000000,
              "error_message": "AssertionError\n    + expected - actual\n\n    -200\n    +401\n\n    at World.<anonymous> (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\features\\support\\steps\\/steps.pages.js:62:37)"
            }
          }
        ],
        "tags": [
          {
            "name": "@Pages",
            "line": 1
          },
          {
            "name": "@NEGATIVE",
            "line": 27
          },
          {
            "name": "@UNAUTHORIZED-GET",
            "line": 27
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "pages-negative-testing;a-user-should-be-able-to-retrieve-the-collection-of-an-specific-page",
        "keyword": "Scenario",
        "line": 34,
        "name": "A user should be able to retrieve the collection of an specific page",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 60000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 35,
            "name": "Does not using valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:22"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 36,
            "name": "Executing GET request to wp/v2/pages/{id} page endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 41000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 37,
            "name": "the status code should be 401 Unauthorized",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:59"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 287000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Pages",
            "line": 1
          },
          {
            "name": "@NEGATIVE",
            "line": 33
          },
          {
            "name": "@UNAUTHORIZED-SPECIFICGET",
            "line": 33
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "pages-negative-testing;verify-that-a-page-title-cannot-be-updated-with-an-integer-value",
        "keyword": "Scenario",
        "line": 40,
        "name": "Verify that a page title cannot be updated with an integer value",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 57000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 41,
            "name": "Given valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "Invalid.POSTINT"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 42,
            "name": "Given the required payload",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:18"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 44,
            "name": "Executing POST request to wp/v2/pages/{id} page endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 70000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 45,
            "name": "the status code should be 400 Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:59"
            },
            "result": {
              "status": "failed",
              "duration": 1000000,
              "error_message": "AssertionError\n    + expected - actual\n\n    -200\n    +400\n\n    at World.<anonymous> (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\features\\support\\steps\\/steps.pages.js:62:37)"
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 282000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Pages",
            "line": 1
          },
          {
            "name": "@NEGATIVE",
            "line": 39
          },
          {
            "name": "@INVALID-TITLEVALUE",
            "line": 39
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "pages-negative-testing;verify-that-a-page-cannot-be-cerated-with-empty-values",
        "keyword": "Scenario",
        "line": 48,
        "name": "Verify that a page cannot be cerated with empty values",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 88000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 49,
            "name": "Given valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "Invalid.EMPTY"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 50,
            "name": "Given the required payload",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:18"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 52,
            "name": "Executing POST request to wp/v2/pages page endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 71000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 53,
            "name": "the status code should be 400 Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:59"
            },
            "result": {
              "status": "failed",
              "duration": 1000000,
              "error_message": "AssertionError\n    + expected - actual\n\n    -201\n    +400\n\n    at World.<anonymous> (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\features\\support\\steps\\/steps.pages.js:62:37)"
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 281000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Pages",
            "line": 1
          },
          {
            "name": "@NEGATIVE",
            "line": 47
          },
          {
            "name": "@INVALID-BODYVALUE",
            "line": 47
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "pages-negative-testing;verify-i-cannot-get-information-from-a-page-when-i-send-a-password-with-empty-value",
        "keyword": "Scenario",
        "line": 56,
        "name": "Verify i cannot get information from a page when I send a password with empty value",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 61000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 57,
            "name": "Given valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "Invalid.BADPASSWORD"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 58,
            "name": "Given the required payload",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:18"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 60,
            "name": "Executing GET request to wp/v2/pages/{id} page endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 53000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 61,
            "name": "the status code should be 403 Forbidden",
            "match": {
              "location": "features\\support\\steps\\steps.pages.js:59"
            },
            "result": {
              "status": "failed",
              "duration": 1000000,
              "error_message": "AssertionError\n    + expected - actual\n\n    -200\n    +403\n\n    at World.<anonymous> (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\features\\support\\steps\\/steps.pages.js:62:37)"
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 134000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Pages",
            "line": 1
          },
          {
            "name": "@NEGATIVE",
            "line": 55
          },
          {
            "name": "@INVALID-SPECIFICGET",
            "line": 55
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "pages-negative-testing",
    "line": 2,
    "keyword": "Feature",
    "name": "Pages Negative Testing",
    "tags": [
      {
        "name": "@Pages",
        "line": 1
      }
    ],
    "uri": "features\\pages.negative.feature"
  },
  {
    "description": "",
    "elements": [
      {
        "description": "",
        "id": "post-crud;create-with-all-required-fields-is-succeful",
        "keyword": "Scenario",
        "line": 4,
        "name": "CREATE WITH ALL REQUIRED FIELDS IS SUCCEFUL",
        "steps": [
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "POST"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Given ",
            "line": 6,
            "name": "User wants to create a post with the following attributes",
            "match": {
              "location": "features\\support\\steps\\steps.post.crud.js:15"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 8,
            "name": "User save the new post a POST request to wp/v2/posts endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.post.crud.js:20"
            },
            "result": {
              "status": "passed",
              "duration": 99000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 9,
            "name": "The save Created with code 201",
            "match": {
              "location": "features\\support\\steps\\steps.post.crud.js:31"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@Posts-Crud",
            "line": 3
          },
          {
            "name": "@Posts-create",
            "line": 3
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "post-crud;the-endpoint-should-be-able-to-retrieve-the-collection-of-all-posts",
        "keyword": "Scenario",
        "line": 12,
        "name": "The endpoint should be able to retrieve the collection of all posts",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 109000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 13,
            "name": "User with valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.post.crud.js:38"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 14,
            "name": "Executes a GET request to wp/v2/posts endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.post.crud.js:42"
            },
            "result": {
              "status": "passed",
              "duration": 64000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 15,
            "name": "The post status code should be 200 OK",
            "match": {
              "location": "features\\support\\steps\\steps.post.crud.js:54"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 156000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Posts-Crud",
            "line": 11
          },
          {
            "name": "@Posts-read",
            "line": 11
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "post-crud;the-endpoint-should-be-able-to-retrieve-the-collection-of-all-posts-by-id-post",
        "keyword": "Scenario",
        "line": 18,
        "name": "The endpoint should be able to retrieve the collection of all posts by id post",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 94000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 19,
            "name": "A Valid credential to retrieve",
            "match": {
              "location": "features\\support\\steps\\steps.post.negative.js:48"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 20,
            "name": "Executes a GET request to wp/v2/posts/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.post.crud.js:42"
            },
            "result": {
              "status": "passed",
              "duration": 50000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 21,
            "name": "The post status code should be 200 OK",
            "match": {
              "location": "features\\support\\steps\\steps.post.crud.js:54"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 143000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Posts-Crud",
            "line": 17
          },
          {
            "name": "@Posts-readById",
            "line": 17
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "post-crud;update-with-all-required-fields-is-succeful",
        "keyword": "Scenario",
        "line": 24,
        "name": "UPDATE WITH ALL REQUIRED FIELDS IS SUCCEFUL",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 88000000
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "PUT"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Given ",
            "line": 26,
            "name": "User wants to update a post with the required attributes",
            "match": {
              "location": "features\\support\\steps\\steps.post.crud.js:61"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 28,
            "name": "User update the post a POST request to wp/v2/posts/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.post.crud.js:66"
            },
            "result": {
              "status": "passed",
              "duration": 91000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 29,
            "name": "The post will be update OK with code 200",
            "match": {
              "location": "features\\support\\steps\\steps.post.crud.js:78"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 128000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Posts-Crud",
            "line": 23
          },
          {
            "name": "@Posts-update",
            "line": 23
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "post-crud;delete-with-all-required-fields-is-succeful",
        "keyword": "Scenario",
        "line": 32,
        "name": "DELETE WITH ALL REQUIRED FIELDS IS SUCCEFUL",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 104000000
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "DELETE"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Given ",
            "line": 34,
            "name": "User wants to delete a post with an identifier",
            "match": {
              "location": "features\\support\\steps\\steps.post.crud.js:85"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 36,
            "name": "User delete the post a DELETE request to wp/v2/posts/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.post.crud.js:89"
            },
            "result": {
              "status": "passed",
              "duration": 193000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 37,
            "name": "The post will be delete OK with code 200",
            "match": {
              "location": "features\\support\\steps\\steps.post.crud.js:101"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Posts-Crud",
            "line": 31
          },
          {
            "name": "@Posts-delete",
            "line": 31
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "post-crud",
    "line": 1,
    "keyword": "Feature",
    "name": "Post CRUD",
    "tags": [],
    "uri": "features\\post.feature"
  },
  {
    "description": "",
    "elements": [
      {
        "description": "",
        "id": "post-negative-test;the-endpoint-shouldn't-be-able-to-create-a-new-post",
        "keyword": "Scenario",
        "line": 4,
        "name": "The endpoint shouldn't be able to create a new post",
        "steps": [
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "Valid.POST"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Given ",
            "line": 5,
            "name": "A invalid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.post.negative.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 7,
            "name": "Executes a POST request to wp/v2/posts endpoint.",
            "match": {
              "location": "features\\support\\steps\\steps.post.negative.js:18"
            },
            "result": {
              "status": "passed",
              "duration": 40000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 8,
            "name": "The status response code should be 401 with status text Unauthorized",
            "match": {
              "location": "features\\support\\steps\\steps.post.negative.js:40"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Posts-Negative",
            "line": 3
          },
          {
            "name": "@Posts-Negative-Create",
            "line": 3
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "post-negative-test;the-endpoint-shouldn't-be-able-delete-a-invalid-post-id",
        "keyword": "Scenario",
        "line": 11,
        "name": "The endpoint shouldn't be able delete a invalid post Id",
        "steps": [
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "Valid.DELETE"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Given ",
            "line": 12,
            "name": "A Valid credentials.",
            "match": {
              "location": "features\\support\\steps\\steps.post.negative.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 5000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 14,
            "name": "Executes a POST request to wp/v2/posts/{id} endpoint.",
            "match": {
              "location": "features\\support\\steps\\steps.post.negative.js:18"
            },
            "result": {
              "status": "passed",
              "duration": 41000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 15,
            "name": "The status response code should be 404 with status text Not Found",
            "match": {
              "location": "features\\support\\steps\\steps.post.negative.js:40"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@Posts-Negative",
            "line": 10
          },
          {
            "name": "@Posts-Negative-Delete",
            "line": 10
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "post-negative-test;the-endpoint-shouldn't-be-able-created-a-new-post-with-invalid-parameters",
        "keyword": "Scenario",
        "line": 18,
        "name": "The endpoint shouldn't be able created a new post with invalid parameters",
        "steps": [
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "Invalid.POST"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Given ",
            "line": 19,
            "name": "A Valid credentials.",
            "match": {
              "location": "features\\support\\steps\\steps.post.negative.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 2000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 21,
            "name": "Executes a POST request to wp/v2/posts endpoint.",
            "match": {
              "location": "features\\support\\steps\\steps.post.negative.js:18"
            },
            "result": {
              "status": "passed",
              "duration": 96000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 22,
            "name": "The status response code should be 400 with status text Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.post.negative.js:40"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Posts-Negative",
            "line": 17
          },
          {
            "name": "@Posts-Create-invalid-parameter",
            "line": 17
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "post-negative-test",
    "line": 1,
    "keyword": "Feature",
    "name": "Post Negative test",
    "tags": [],
    "uri": "features\\post.negative.feature"
  },
  {
    "description": "",
    "elements": [
      {
        "description": "",
        "id": "users-crud;a-user-should-be-able-to-retrieve-the-collection-of-all-users",
        "keyword": "Scenario",
        "line": 5,
        "name": "A user should be able to retrieve the collection of all users",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 6,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 7,
            "name": "I execute a GET request to wp/v2/users endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 51000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 8,
            "name": "The status code should be 200 OK",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@Users-CRUD",
            "line": 4
          },
          {
            "name": "@Read",
            "line": 4
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-crud;a-user-should-be-able-to-create-a-new-user",
        "keyword": "Scenario",
        "line": 11,
        "name": "A user should be able to create a new user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 12,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "Valid.POST.CreateUser"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 13,
            "name": "I have the required payload",
            "match": {
              "location": "features\\support\\steps\\steps.js:22"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 15,
            "name": "I execute a POST request to wp/v2/users endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 222000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 16,
            "name": "The user is created",
            "match": {
              "location": "features\\support\\steps\\steps.js:67"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 17,
            "name": "The status code should be 201 Created",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 114000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@Users-CRUD",
            "line": 10
          },
          {
            "name": "@Create",
            "line": 10
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-crud;a-user-should-be-able-to-retrieve-a-user-info",
        "keyword": "Scenario",
        "line": 20,
        "name": "A user should be able to retrieve a user info",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 177000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 21,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 22,
            "name": "I execute a GET request to wp/v2/users/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 77000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 23,
            "name": "The status code should be 200 OK",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 179000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@Users-CRUD",
            "line": 19
          },
          {
            "name": "@ReadById",
            "line": 19
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-crud;a-user-should-be-able-to-update-a-user",
        "keyword": "Scenario",
        "line": 26,
        "name": "A user should be able to update a user",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 181000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 27,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "Valid.POST.UpdateUser"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 28,
            "name": "I have the required payload",
            "match": {
              "location": "features\\support\\steps\\steps.js:22"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 30,
            "name": "I execute a POST request to wp/v2/users/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 103000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 31,
            "name": "The user is updated",
            "match": {
              "location": "features\\support\\steps\\steps.js:67"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 32,
            "name": "The status code should be 200 OK",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 171000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@Users-CRUD",
            "line": 25
          },
          {
            "name": "@Update",
            "line": 25
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-crud;a-user-should-be-able-to-delete-a-user",
        "keyword": "Scenario",
        "line": 35,
        "name": "A user should be able to delete a user",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 187000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 36,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "Valid.DELETE.DeleteUser"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 37,
            "name": "I have the required payload",
            "match": {
              "location": "features\\support\\steps\\steps.js:22"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 39,
            "name": "I execute a DELETE request to wp/v2/users/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 157000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 40,
            "name": "The user is deleted",
            "match": {
              "location": "features\\support\\steps\\steps.js:67"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 41,
            "name": "The status code should be 200 OK",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@Users-CRUD",
            "line": 34
          },
          {
            "name": "@Delete",
            "line": 34
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "users-crud",
    "line": 2,
    "keyword": "Feature",
    "name": "Users CRUD",
    "tags": [
      {
        "name": "@Users",
        "line": 1
      }
    ],
    "uri": "features\\user.feature"
  },
  {
    "description": "",
    "elements": [
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-retrieve-the-collection-of-all-users",
        "keyword": "Scenario",
        "line": 5,
        "name": "A user should not be able to retrieve the collection of all users",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 6,
            "name": "I don't have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 7,
            "name": "I execute a GET request to wp/v2/users endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 42000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 8,
            "name": "The error status code should be 401 Unauthorized",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "failed",
              "duration": 0,
              "error_message": "AssertionError\n    + expected - actual\n\n    -200\n    +401\n\n    at World.<anonymous> (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\features\\support\\steps\\/steps.js:58:37)"
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 4
          },
          {
            "name": "@UsersRead-N",
            "line": 4
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-create-a-new-user",
        "keyword": "Scenario",
        "line": 11,
        "name": "A user should not be able to create a new user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 12,
            "name": "I don't have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 3000000
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "Valid.POST.CreateUser"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 13,
            "name": "I have the required payload",
            "match": {
              "location": "features\\support\\steps\\steps.js:22"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 15,
            "name": "I execute a POST request to wp/v2/users endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 37000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 16,
            "name": "The error status code should be 401 Unauthorized",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 10
          },
          {
            "name": "@UsersCreate-N",
            "line": 10
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-create-a-new-user",
        "keyword": "Scenario",
        "line": 19,
        "name": "A user should not be able to create a new user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 20,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 21,
            "name": "I have a invalid payload: Invalid.POST.Create-Without-Name",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 22,
            "name": "I execute a POST request to wp/v2/users endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 45000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 23,
            "name": "The error status code should be 400 Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 24,
            "name": "The payload should be MissingParam",
            "match": {
              "location": "features\\support\\steps\\steps.js:63"
            },
            "result": {
              "status": "passed",
              "duration": 2000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 18
          },
          {
            "name": "@UsersCreate-N",
            "line": 18
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-create-a-new-user",
        "keyword": "Scenario",
        "line": 19,
        "name": "A user should not be able to create a new user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 20,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 21,
            "name": "I have a invalid payload: Invalid.POST.Create-Without-Email",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 22,
            "name": "I execute a POST request to wp/v2/users endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 45000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 23,
            "name": "The error status code should be 400 Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 2000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 24,
            "name": "The payload should be MissingParam",
            "match": {
              "location": "features\\support\\steps\\steps.js:63"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 18
          },
          {
            "name": "@UsersCreate-N",
            "line": 18
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-create-a-new-user",
        "keyword": "Scenario",
        "line": 19,
        "name": "A user should not be able to create a new user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 20,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 21,
            "name": "I have a invalid payload: Invalid.POST.Create-Without-Pass",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 22,
            "name": "I execute a POST request to wp/v2/users endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 45000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 23,
            "name": "The error status code should be 400 Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 24,
            "name": "The payload should be MissingParam",
            "match": {
              "location": "features\\support\\steps\\steps.js:63"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 18
          },
          {
            "name": "@UsersCreate-N",
            "line": 18
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-create-a-new-user",
        "keyword": "Scenario",
        "line": 19,
        "name": "A user should not be able to create a new user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 20,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 21,
            "name": "I have a invalid payload: Invalid.POST.Create-Empty-Name",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 22,
            "name": "I execute a POST request to wp/v2/users endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 45000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 23,
            "name": "The error status code should be 400 Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 24,
            "name": "The payload should be InvalidParam",
            "match": {
              "location": "features\\support\\steps\\steps.js:63"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 18
          },
          {
            "name": "@UsersCreate-N",
            "line": 18
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-create-a-new-user",
        "keyword": "Scenario",
        "line": 19,
        "name": "A user should not be able to create a new user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 20,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 21,
            "name": "I have a invalid payload: Invalid.POST.Create-Empty-Email",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 22,
            "name": "I execute a POST request to wp/v2/users endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 49000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 23,
            "name": "The error status code should be 400 Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 24,
            "name": "The payload should be InvalidParam",
            "match": {
              "location": "features\\support\\steps\\steps.js:63"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 18
          },
          {
            "name": "@UsersCreate-N",
            "line": 18
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-create-a-new-user",
        "keyword": "Scenario",
        "line": 19,
        "name": "A user should not be able to create a new user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 20,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 21,
            "name": "I have a invalid payload: Invalid.POST.Create-Empty-Pass",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 22,
            "name": "I execute a POST request to wp/v2/users endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 43000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 23,
            "name": "The error status code should be 400 Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 2000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 24,
            "name": "The payload should be InvalidParam",
            "match": {
              "location": "features\\support\\steps\\steps.js:63"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 18
          },
          {
            "name": "@UsersCreate-N",
            "line": 18
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-create-a-new-user",
        "keyword": "Scenario",
        "line": 19,
        "name": "A user should not be able to create a new user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 20,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 21,
            "name": "I have a invalid payload: Invalid.POST.Create-Space-Name",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 22,
            "name": "I execute a POST request to wp/v2/users endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 43000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 23,
            "name": "The error status code should be 400 Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 24,
            "name": "The payload should be InvalidParam",
            "match": {
              "location": "features\\support\\steps\\steps.js:63"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 18
          },
          {
            "name": "@UsersCreate-N",
            "line": 18
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-create-a-new-user",
        "keyword": "Scenario",
        "line": 19,
        "name": "A user should not be able to create a new user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 20,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 21,
            "name": "I have a invalid payload: Invalid.POST.Create-Space-Email",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 22,
            "name": "I execute a POST request to wp/v2/users endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 44000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 23,
            "name": "The error status code should be 400 Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 24,
            "name": "The payload should be InvalidParam",
            "match": {
              "location": "features\\support\\steps\\steps.js:63"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 0
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 18
          },
          {
            "name": "@UsersCreate-N",
            "line": 18
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-create-a-new-user",
        "keyword": "Scenario",
        "line": 19,
        "name": "A user should not be able to create a new user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 20,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 21,
            "name": "I have a invalid payload: Invalid.POST.Create-Space-Pass",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 22,
            "name": "I execute a POST request to wp/v2/users endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 183000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 23,
            "name": "The error status code should be 400 Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "failed",
              "duration": 1000000,
              "error_message": "AssertionError\n    + expected - actual\n\n    -201\n    +400\n\n    at World.<anonymous> (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\features\\support\\steps\\/steps.js:58:37)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 24,
            "name": "The payload should be InvalidParam",
            "match": {
              "location": "features\\support\\steps\\steps.js:63"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 194000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 18
          },
          {
            "name": "@UsersCreate-N",
            "line": 18
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-retrieve-a-user",
        "keyword": "Scenario",
        "line": 38,
        "name": "A user should not be able to retrieve a user",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 184000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 39,
            "name": "I don't have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 40,
            "name": "I execute a GET request to wp/v2/users/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 39000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 41,
            "name": "The error status code should be 401 Unauthorized",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 2000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 159000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 37
          },
          {
            "name": "@UsersReadById-N",
            "line": 37
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-retrieve-the-admin-user",
        "keyword": "Scenario",
        "line": 44,
        "name": "A user should not be able to retrieve the admin user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 45,
            "name": "I don't have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 46,
            "name": "I execute a GET request to wp/v2/users/1 endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 42000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 47,
            "name": "The error status code should be 401 Unauthorized",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "failed",
              "duration": 0,
              "error_message": "AssertionError\n    + expected - actual\n\n    -200\n    +401\n\n    at World.<anonymous> (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\features\\support\\steps\\/steps.js:58:37)"
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 43
          },
          {
            "name": "@UsersReadByIdOne",
            "line": 43
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-update-a-user-info",
        "keyword": "Scenario",
        "line": 50,
        "name": "A user should not be able to update a user info",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 183000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 51,
            "name": "I don't have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 3000000
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "Valid.POST.UpdateUser"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 52,
            "name": "I have the required payload",
            "match": {
              "location": "features\\support\\steps\\steps.js:22"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 54,
            "name": "I execute a POST request to wp/v2/users/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 38000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 55,
            "name": "The error status code should be 401 Unauthorized",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 185000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 49
          },
          {
            "name": "@UsersUpdate-N",
            "line": 49
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-update-a-user",
        "keyword": "Scenario",
        "line": 58,
        "name": "A user should not be able to update a user",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 181000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 59,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 60,
            "name": "I have a invalid payload: Invalid.POST.Update-Invalid-Email",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 61,
            "name": "I execute a POST request to wp/v2/users/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 45000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 62,
            "name": "The error status code should be 400 Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 153000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 57
          },
          {
            "name": "@UsersUpdate-N",
            "line": 57
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-update-a-user",
        "keyword": "Scenario",
        "line": 58,
        "name": "A user should not be able to update a user",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 180000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 59,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 60,
            "name": "I have a invalid payload: Invalid.POST.Update-Empty-Email",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 61,
            "name": "I execute a POST request to wp/v2/users/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 42000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 62,
            "name": "The error status code should be 400 Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 174000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 57
          },
          {
            "name": "@UsersUpdate-N",
            "line": 57
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-update-a-user",
        "keyword": "Scenario",
        "line": 58,
        "name": "A user should not be able to update a user",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 179000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 59,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 60,
            "name": "I have a invalid payload: Invalid.POST.Update-Space-Email",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 61,
            "name": "I execute a POST request to wp/v2/users/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 60000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 62,
            "name": "The error status code should be 400 Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 121000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 57
          },
          {
            "name": "@UsersUpdate-N",
            "line": 57
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-update-a-user",
        "keyword": "Scenario",
        "line": 58,
        "name": "A user should not be able to update a user",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 170000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 59,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 60,
            "name": "I have a invalid payload: Invalid.POST.Update-Empty-Password",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 61,
            "name": "I execute a POST request to wp/v2/users/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 51000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 62,
            "name": "The error status code should be 400 Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 162000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 57
          },
          {
            "name": "@UsersUpdate-N",
            "line": 57
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-update-a-user",
        "keyword": "Scenario",
        "line": 58,
        "name": "A user should not be able to update a user",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 174000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 59,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 60,
            "name": "I have a invalid payload: Invalid.POST.Update-Space-Password",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 61,
            "name": "I execute a POST request to wp/v2/users/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 77000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 62,
            "name": "The error status code should be 400 Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "failed",
              "duration": 1000000,
              "error_message": "AssertionError\n    + expected - actual\n\n    -200\n    +400\n\n    at World.<anonymous> (D:\\usuario\\Desktop\\fundacion_jala\\Api-Testing\\WordPress-Sandwichito\\features\\support\\steps\\/steps.js:58:37)"
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 122000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 57
          },
          {
            "name": "@UsersUpdate-N",
            "line": 57
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-update-a-user",
        "keyword": "Scenario",
        "line": 58,
        "name": "A user should not be able to update a user",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 176000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 59,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 60,
            "name": "I have a invalid payload: Invalid.POST.Update-username",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 61,
            "name": "I execute a POST request to wp/v2/users/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 43000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 62,
            "name": "The error status code should be 400 Bad Request",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 117000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 57
          },
          {
            "name": "@UsersUpdate-N",
            "line": 57
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-delete-a-user",
        "keyword": "Scenario",
        "line": 73,
        "name": "A user should not be able to delete a user",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 167000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 74,
            "name": "I don't have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "payload",
                      "Valid.DELETE.DeleteUser"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 75,
            "name": "I have the required payload",
            "match": {
              "location": "features\\support\\steps\\steps.js:22"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 77,
            "name": "I execute a DELETE request to wp/v2/users/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 40000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 78,
            "name": "The error status code should be 401 Unauthorized",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 201000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 72
          },
          {
            "name": "@UsersDelete-N",
            "line": 72
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-delete-a-user",
        "keyword": "Scenario",
        "line": 81,
        "name": "A user should not be able to delete a user",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 181000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 82,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 83,
            "name": "I have a invalid payload: Invalid.DELETE.Delete-Without-Parameters",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 84,
            "name": "I execute a POST request to wp/v2/users/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 63000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 85,
            "name": "The error status code should be 200 OK",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 169000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 80
          },
          {
            "name": "@UsersDelete-N",
            "line": 80
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-delete-a-user",
        "keyword": "Scenario",
        "line": 81,
        "name": "A user should not be able to delete a user",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 200000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 82,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 83,
            "name": "I have a invalid payload: Invalid.DELETE.Delete-Without-Force",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 84,
            "name": "I execute a POST request to wp/v2/users/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 65000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 85,
            "name": "The error status code should be 200 OK",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 140000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 80
          },
          {
            "name": "@UsersDelete-N",
            "line": 80
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "users-negative-testing;a-user-should-not-be-able-to-delete-a-user",
        "keyword": "Scenario",
        "line": 81,
        "name": "A user should not be able to delete a user",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 202000000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 82,
            "name": "I have valid credentials",
            "match": {
              "location": "features\\support\\steps\\steps.js:13"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 83,
            "name": "I have a invalid payload: Invalid.DELETE.Delete-Without-reassing",
            "match": {
              "location": "features\\support\\steps\\steps.js:26"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 84,
            "name": "I execute a POST request to wp/v2/users/{id} endpoint",
            "match": {
              "location": "features\\support\\steps\\steps.js:30"
            },
            "result": {
              "status": "passed",
              "duration": 56000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 85,
            "name": "The error status code should be 200 OK",
            "match": {
              "location": "features\\support\\steps\\steps.js:52"
            },
            "result": {
              "status": "passed",
              "duration": 1000000
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 178000000
            }
          }
        ],
        "tags": [
          {
            "name": "@Users",
            "line": 1
          },
          {
            "name": "@UsersNegative",
            "line": 80
          },
          {
            "name": "@UsersDelete-N",
            "line": 80
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "users-negative-testing",
    "line": 2,
    "keyword": "Feature",
    "name": "Users Negative Testing",
    "tags": [
      {
        "name": "@Users",
        "line": 1
      }
    ],
    "uri": "features\\user.negative.feature"
  }
]